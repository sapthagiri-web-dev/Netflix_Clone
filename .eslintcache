[{"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/index.js":"1","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/reportWebVitals.js":"2","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/App.js":"3","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Row.js":"4","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/requests.js":"5","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/axios.js":"6","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Banner.js":"7","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Nav.js":"8"},{"size":500,"mtime":1609394148449,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609394148449,"results":"11","hashOfConfig":"10"},{"size":920,"mtime":1609572166402,"results":"12","hashOfConfig":"10"},{"size":1844,"mtime":1609580564207,"results":"13","hashOfConfig":"10"},{"size":698,"mtime":1609402167065,"results":"14","hashOfConfig":"10"},{"size":146,"mtime":1609399194950,"results":"15","hashOfConfig":"10"},{"size":1708,"mtime":1609577785331,"results":"16","hashOfConfig":"10"},{"size":604,"mtime":1609575934596,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1j3w2lr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/index.js",[],["36","37"],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/reportWebVitals.js",[],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/App.js",[],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Row.js",["38","39"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n// import YouTube from \"react-youtube\";\n// import movieTrailer from \"movie-trailer\";\n\nconst base_url = \"https://image.tmdb.org/t/p/w500\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // On click to play function is not working code are commented below\n\n  // const opts = {\n  //   height: \"390\",\n  //   width: \"100%\",\n  //   playerVars: {\n  //     // https://developers.google.com/youtube/player_parameters\n  //     autoplay: 1,\n  //   },\n  // };\n\n  // const handleClick = (movie) => {\n  //   if (trailerUrl) {\n  //     setTrailerUrl(\"\");\n  //   } else {\n  //     movieTrailer(movie?.name || \"\")\n  //       .then((url) => {\n  //         const urlParams = new URLSearchParams(new URL(url).search);\n  //         urlParams.get(\"v\");\n  //       })\n  //       .catch((error) => console.log(error));\n  //   }\n  // };\n\n  // console.log(movies);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            // onClick={() => handleClick(movie)}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          ></img>\n        ))}\n      </div>\n      {/* {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />} */}\n    </div>\n  );\n}\n\nexport default Row;\n","/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/requests.js",[],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/axios.js",[],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Banner.js",[],"/home/saptha/Desktop/React practice/NetFlix Movie clone app/netflix-clone/src/Nav.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":11,"column":22,"nodeType":"46","messageId":"47","endLine":11,"endColumn":35},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'trailerUrl' is assigned a value but never used.","Identifier","unusedVar","'setTrailerUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]